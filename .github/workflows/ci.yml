name: CI

on:
  push:
    branches:
      - release
      - release/*
      - feature/*
      - develop
      - master

    tags:
      - '*'

env:
  NPM_TOKEN: ${{secrets.GA_TOKEN}}

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Extract tag
        id: extract-tag
        run: echo "::set-output name=tag::${GITHUB_REF/refs\/tags\//}"

      - name: Check tag
        run: echo ${{ steps.extract-tag.outputs.tag }}

      - name: Extract branch
        id: extract-branch
        run: echo "::set-output name=branch::${GITHUB_REF/refs\/heads\//}"

      - name: Check branch
        run: echo ${{ steps.extract-branch.outputs.branch }}

      - uses: actions/setup-node@v1
        with:
          node-version: 14

      - run: npm run bootstrap
      
      - run: npm run lint

      - run: npm test

  release:
    name: Create release
    needs: test
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body_path: CHANGELOG.md
          draft: false
          prerelease: false

  publish-docker:
    name: Publish Docker image
    needs: release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - uses: actions/checkout@v2

      - name: Extract tag
        id: extract-tag
        run: echo "::set-output name=tag::${GITHUB_REF/refs\/tags\//}"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GA_TOKEN }}

      - name: Build and push platform api
        id: docker_build_api
        uses: docker/build-push-action@v2
        with:
          context: packages/dgt-platform-api/
          push: true
          tags: digita-ai/dgt-platform-api:${{ steps.extract-tag.outputs.tag }}
          build-args: |
            NPM_TOKEN=${{secrets.GA_TOKEN}}
      - name: Build and push platform web
        id: docker_build_web
        uses: docker/build-push-action@v2
        with:
          context: packages/dgt-platform-web/
          push: true
          tags: digita-ai/dgt-platform-web:${{ steps.extract-tag.outputs.tag }}
          build-args: |
            NPM_TOKEN=${{secrets.GA_TOKEN}}
      - name: Build and push platform public
        id: docker_build_public
        uses: docker/build-push-action@v2
        with:
          context: packages/dgt-platform-public/
          push: true
          tags: digita-ai/dgt-platform-public:${{ steps.extract-tag.outputs.tag }}
          build-args: |
            NPM_TOKEN=${{secrets.GA_TOKEN}}
      - name: Build and push platform pods
        id: docker_build_pods
        uses: docker/build-push-action@v2
        with:
          context: packages/dgt-platform-pods/
          push: true
          tags: digita-ai/dgt-platform-pods:${{ steps.extract-tag.outputs.tag }}
          build-args: |
            NPM_TOKEN=${{secrets.GA_TOKEN}}
  deploy-develop:
    name: Deploy to develop
    needs: publish-docker
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - uses: actions/checkout@v2

      - name: Extract tag
        id: extract-tag
        run: echo "::set-output name=tag::${GITHUB_REF/refs\/tags\//}"

      - name: 'Login via Azure CLI'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GA_TOKEN }}

      - name: Deploy platform api
        uses: 'azure/aci-deploy@v1'
        with:
          resource-group: ${{ secrets.RESOURCE_GROUP }}
          dns-name-label: dgt-platform-api-develop
          image: ghcr.io/digita-ai/dgt-platform-api:${{ steps.extract-tag.outputs.tag }}
          registry-login-server: ghcr.io
          registry-username: ${{ secrets.GA_USERNAME }}
          registry-password: ${{ secrets.GA_TOKEN }}
          name: dgt-platform-api-develop
          location: 'west europe'
          ports: 3000
          # ip-address: 'Private'

      - name: Deploy platform web
        uses: 'azure/aci-deploy@v1'
        with:
          resource-group: ${{ secrets.RESOURCE_GROUP }}
          dns-name-label: dgt-platform-web-develop
          image: ghcr.io/digita-ai/dgt-platform-web:${{ steps.extract-tag.outputs.tag }}
          registry-login-server: ghcr.io
          registry-username: ${{ secrets.GA_USERNAME }}
          registry-password: ${{ secrets.GA_TOKEN }}
          name: dgt-platform-web-develop
          location: 'west europe'
          ports: 80
          # ip-address: 'Private'

      - name: Deploy platform public
        uses: 'azure/aci-deploy@v1'
        with:
          resource-group: ${{ secrets.RESOURCE_GROUP }}
          dns-name-label: dgt-platform-public-develop
          image: ghcr.io/digita-ai/dgt-platform-public:${{ steps.extract-tag.outputs.tag }}
          registry-login-server: ghcr.io
          registry-username: ${{ secrets.GA_USERNAME }}
          registry-password: ${{ secrets.GA_TOKEN }}
          name: dgt-platform-public-develop
          location: 'west europe'
          ports: 80
          # ip-address: 'Private'

      - name: Deploy platform pods
        uses: 'azure/aci-deploy@v1'
        with:
          resource-group: ${{ secrets.RESOURCE_GROUP }}
          dns-name-label: dgt-platform-pods-develop
          image: ghcr.io/digita-ai/dgt-platform-pods:${{ steps.extract-tag.outputs.tag }}
          registry-login-server: ghcr.io
          registry-username: ${{ secrets.GA_USERNAME }}
          registry-password: ${{ secrets.GA_TOKEN }}
          name: dgt-platform-pods-develop
          location: 'west europe'
          ports: 80
          environment-variables: 'PORT=80 BASE_URL=http://dgt-solid-server-develop.westeurope.azurecontainer.io'
          # ip-address: 'Private'