@baseUrl = http://localhost:3002
@providerUrl = http://localhost:3000

### panva = auth | keycloak = auth/realms/digita/protocol/openid-connect/auth | auth0 = authorize
@authEndpoint = auth

### panva = reg | auth0 = oidc/register | keycloak = auth/realms/digita/clients-registrations/openid-connect
@registration = reg

### panva = token | keycloak = auth/realms/digita/protocol/openid-connect/token | auth0 = token

@tokenEndpoint = token

########

# @name createPod
POST {{baseUrl}}/pods HTTP/1.1
Content-Type: application/json

{
  "login": "buckylaplasse",
  "webId": "http://localhost:3002/buckylaplasse/profile/card#me",
  "name": "Bucky Laplasse",
  "email": "buckylaplasse@digita.ai"
}

########

# @name createPod
POST {{baseUrl}}/pods HTTP/1.1
Content-Type: application/json

{
  "login": "tonypaillard",
  "webId": "http://localhost:3002/tonypaillard/profile/card#me",
  "name": "Tony Paillard",
  "email": "tonypaillard@digita.ai"
}

########

# @name createPodAuth0
POST {{baseUrl}}/pods HTTP/1.1
Content-Type: application/json

{
  "login": "auth0609be5ed22684f0067d64174",
  "webId": "http://localhost:3002/auth0609be5ed22684f0067d64174/profile/card#me",
  "name": "Lea Peeters",
  "email": "auth0609be5ed22684f0067d64174@digita.ai"
}

########

# @name createPodKeycloak
POST {{baseUrl}}/pods HTTP/1.1
Content-Type: application/json

{
  "login": "944e0f16-b053-48df-b7d3-2371b680b2f3",
  "webId": "http://localhost:3002/944e0f16-b053-48df-b7d3-2371b680b2f3/profile/card#me",
  "name": "Keycloak User",
  "email": "944e0f16-b053-48df-b7d3-2371b680b2f3@digita.ai"
}

########

# @name getProfileAsTurtle
GET {{baseUrl}}/tonypaillard/profile/card HTTP/1.1
Accept: text/turtle

########

# @name createProfile
PUT {{baseUrl}}/profile/card HTTP/1.1
Content-Type: text/turtle

@prefix : <#>.
@prefix schem: <http://schema.org/>.
@prefix pro: <./>.
@prefix n0: <http://xmlns.com/foaf/0.1/>.

pro:card a n0:PersonalProfileDocument; n0:maker :me; n0:primaryTopic :me.

:me
    a schem:Person, n0:Person;
    n0:name "Tony Paillard".


#note: replace ports with the relevant ports for you.
### @name getOpenidConfig

# Shows the relevant openid configuration for the identity provider.
GET {{providerUrl}}/.well-known/openid-configuration

### @name getToken

# A valid request for a token. Be sure to change the code. If DPoP is used a valid DPoP proof needs to be provided aswell.
POST {{providerUrl}}/{{tokenEndpoint}}
content-type: application/x-www-form-urlencoded
#DPoP: eyJhbGciOiJFUzI1NiIsInR5cCI6ImRwb3Arand0IiwiandrIjp7ImNydiI6IlAtMjU2Iiwia3R5IjoiRUMiLCJ4IjoiemxnbGptSG5Dd3JGeFBvNHZ6c0hnU3NKSW5NRkpkM3liN1JUQVRfakZFZyIsInkiOiIwWFNGS0hmT2xRYmFSOWFFaUNmc2g5M2NQeHdIRVQ0RHVLN25LbVExTElNIn19.eyJodG0iOiJQT1NUIiwiaHR1IjoiaHR0cDovL2xvY2FsaG9zdDozMDAwL3Rva2VuIiwianRpIjoiNzhmMWFlNTQtMGYwZi00YzhmLWE3YmUtZDQ5Yzg5NWFjYTU1IiwiaWF0IjoxNjE2Njc3NjAwfQ.JXjyEDcSJscDj3IgW_sYdiYhXWHsQyp2hg5ANFhTuArmAs6Gs1lRZ2Gr2hHMfdUwIkDWSNSUi1748pLcwhvJTA

grant_type=authorization_code
&code=aDThLsGn0MIB6zdx-48TLG9NB-JqLb9nAoFT_3ZReDO
&client_id=test_app
&client_secret=super_secret
&redirect_uri=http%3A%2F%2Flocalhost:3001%2Frequests.html
&code_verifier=adfasfadfagwewadfaefadrga1d5fafd1adsf4a84ewawef5af


### Register client dynamically
POST {{providerUrl}}/{{registration}} HTTP/1.1
Content-Type: application/json
Accept: application/json

{
  "redirect_uris": [
    "http://localhost:3001/requests.html"
  ],
  "client_secret_expires_at": 0 ,
  "token_endpoint_auth_method" : "none"
}

### an authorization request
GET {{providerUrl}}/{{authEndpoint}}?response_type=code&scope=openid&client_id=http%3A%2F%2Flocalhost:3002%2Ftonypaillard%2Fprofile%2Fcard%23me&redirect_uri=http%3A%2F%2Flocalhost:3001%2Frequests.html HTTP/1.1

### register a client example
POST {{providerUrl}}/{{registration}} HTTP/1.1
Content-Type: application/json
Accept: application/json

{
  "client_id": "http://localhost:3002/jaspervandenberghen/profile/card#me",
  "redirect_uris": [
    "http://localhost:3001/requests.html"
  ],
  "token_endpoint_auth_method" : "none",
}

### read registration info on the client uri, using the bearer access token you received upon registration
GET {{providerUrl}}/{{registration}}/12F77eK7STijj2KfjAQNC HTTP/1.1
Authorization: Bearer xsTFEvcWOnm6hUmKkzV9S5pKF6_HBwQSudx2mbo1UA0

### client credentials token request
POST  http://localhost:3003/oauth/client HTTP/1.1
Content-Type: application/json

{
    "grant_type":"client_credentials",
    "client_id":"UdDoY0eFzeNZFHoNAD82aN4uAYjdTovH", 
    "client_secret":"-is-LM99InKK9dXVjLNlWAxmxoi9uTYGRyW9ilMcbT0io8sGtaMi4iZsnwjb9REK",
    "audience" : "https://useid-dev.eu.auth0.com/api/v2/"
}

###

POST http://localhost:3003/passwordless/start
Content-Type: application/json

{
  "client_id": "r5oioNlX1IyM9gnQ2j6rlZxfx0UjptcF",
  "client_secret": "SbvZ_apuxaT8dU5kHpr_u5qVtEsz2BY5uY7h7egyafNcwnj33KFy1xzbBTMnDsto",
  "connection": "email",
  "email": "...",
  "send": "link",
  "authParams": {
    "scope": "openid",
    "response_type": "code",
    "redirect_uri": "http://localhost:3001/requests.html",
  }
}