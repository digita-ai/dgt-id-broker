#note: replace ports with the relevant ports for you.
### @name getOpenidConfig

# Shows the relevant openid configuration for the identity provider.
GET http://localhost:3000/.well-known/openid-configuration

### @name getToken

# A valid request for a token. Be sure to change the code. If DPoP is used a valid DPoP proof needs to be provided aswell.
POST http://localhost:3000/token
content-type: application/x-www-form-urlencoded
#DPoP: eyJhbGciOiJFUzI1NiIsInR5cCI6ImRwb3Arand0IiwiandrIjp7ImNydiI6IlAtMjU2Iiwia3R5IjoiRUMiLCJ4IjoiemxnbGptSG5Dd3JGeFBvNHZ6c0hnU3NKSW5NRkpkM3liN1JUQVRfakZFZyIsInkiOiIwWFNGS0hmT2xRYmFSOWFFaUNmc2g5M2NQeHdIRVQ0RHVLN25LbVExTElNIn19.eyJodG0iOiJQT1NUIiwiaHR1IjoiaHR0cDovL2xvY2FsaG9zdDozMDAwL3Rva2VuIiwianRpIjoiNzhmMWFlNTQtMGYwZi00YzhmLWE3YmUtZDQ5Yzg5NWFjYTU1IiwiaWF0IjoxNjE2Njc3NjAwfQ.JXjyEDcSJscDj3IgW_sYdiYhXWHsQyp2hg5ANFhTuArmAs6Gs1lRZ2Gr2hHMfdUwIkDWSNSUi1748pLcwhvJTA

grant_type=authorization_code
&code=aDThLsGn0MIB6zdx-48TLG9NB-JqLb9nAoFT_3ZReDO
&client_id=test_app
&client_secret=super_secret
&redirect_uri=http%3A%2F%2Flocalhost:3001%2Frequests.html
&code_verifier=adfasfadfagwewadfaefadrga1d5fafd1adsf4a84ewawef5af

### @name createPodAbel

#creates a solid pod with the oidcIssuer field, which is necessary for the Solid-OIDC flow.
POST http://localhost:3002/pods HTTP/1.1
Content-Type: application/json

{
  "login": "abelvandenbriel",
  "webId": "http://localhost:3002/abelvandenbriel/profile/card#me",
  "name": "Abel Van den Briel",
  "email": "abelvandenbriel@digita.ai",
  "oidcIssuer": "http://localhost:3000/"
}

### @name createPodJasper

#creates a solid pod with the oidcIssuer field, which is necessary for the Solid-OIDC flow.
POST http://localhost:3002/pods HTTP/1.1
Content-Type: application/json

{
  "login": "jaspervandenberghen",
  "webId": "http://localhost:3002/jaspervandenberghen/profile/card#me",
  "name": "Jasper Vandenberghen",
  "email": "jaspervandenberghen@digita.ai",
  "oidcIssuer": "http://localhost:3000/"
}



###
POST http://localhost:3000/reg HTTP/1.1
Content-Type: application/json
Accept: application/json

{
  "client_id": "http://localhost:3002/abelvandenbriel/profile/card#me",
  "client_secret": "super_secret",
  "redirect_uris": [
    "http://192.168.0.10:3001/requests.html"
  ],
  "client_secret_expires_at": 0 
}

###
GET http://localhost:3000/reg/12F77eK7STijj2KfjAQNC HTTP/1.1
Authorization: Bearer xsTFEvcWOnm6hUmKkzV9S5pKF6_HBwQSudx2mbo1UA0


### Register client dynamically
POST http://localhost:3000/reg HTTP/1.1
Content-Type: application/json
Accept: application/json

{
  "client_id": "woutertermont",
  "redirect_uris": [
    "http://localhost:3001/requests.html"
  ],
  "client_secret_expires_at": 0 ,
  "token_endpoint_auth_method" : "none"
}

###
GET http://localhost:3000/auth?response_type=code&scope=openid&client_id=http%3A%2F%2Flocalhost:3002%2Fjaspervandenberghen%2Fprofile%2Fcard%23me&redirect_uri=http%3A%2F%2Flocalhost:3001%2Frequests.html HTTP/1.1